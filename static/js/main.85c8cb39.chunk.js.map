{"version":3,"sources":["utils/contacts.js","action/actionTypes.js","action/index.js","components/UserCard.js","components/LeftView.js","components/CreateConvo.js","components/RightView.js","components/App.js","reducer/index.js","index.js"],"names":["contacts","userName","id","status","photo","chats","message","sender","timestamps","ADD_CONTACTS","FILTER_CONTACTS","SEND_MESSAGE","addContacts","type","connectedComponent","connect","state","props","setValue","dispatch","user","length","link","to","style","textDecoration","onClick","className","src","alt","substring","loggedInUser","useState","searchbar","setConvo","useEffect","filteredContacts","Contacts","filter","contact","toLowerCase","includes","img","name","phoneNo","placeholder","onChange","e","newValue","target","value","map","UserCard","createConvo","handleClose","showConvo","setMessage","CreateConvo","chat","index","date","hours","getHours","minutes","getMinutes","ampm","formatAMPM","Date","sendMessage","user1","user2","user3","user4","user5","user6","user7","user8","user9","user10","user11","user12","user13","path","exact","render","initialState","store","createStore","action","newObj","cont","console","log","push","applyMiddleware","thunk","logger","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85c8cb39.chunk.js","sourcesContent":["//dummy data for this chat app UI\r\nconst contacts= [\r\n    {\r\n        userName:\"Ashish\",\r\n        id:1,\r\n        status:'online',\r\n        photo:\"https://images.unsplash.com/photo-1528763380143-65b3ac89a3ff?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=389&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Ashish\",\r\n                sender:'self',\r\n                timestamps:'12.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'12.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'12.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'12.05 PM'\r\n            },\r\n            {\r\n                message:\"m good, will you be free on today's evening\",\r\n                sender:'self',\r\n                timestamps:'12.10 PM'\r\n            },\r\n            {\r\n                message:\"anytime for u buddy\",\r\n                sender:'user',\r\n                timestamps:'12.13 PM'\r\n            },\r\n            {\r\n                 message:\"Ok then let's meet today 6.00 PM\",\r\n                sender:'self',\r\n                timestamps:'12.17 PM'\r\n            },\r\n            {\r\n                message:\"yeah that's great :)\",\r\n                sender:'user',\r\n                timestamps:'12.18 PM'\r\n            }\r\n\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Preeti\",\r\n        id:2,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Preeti\",\r\n                sender:'self',\r\n                timestamps:'01.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'01.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'01.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'01.05 PM'\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Ayush\",\r\n        id:3,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=580&q=80\",\r\n        chats:[]\r\n    },\r\n    {\r\n        userName:\"Akansha\",\r\n        id:4,\r\n        status:'online',\r\n        photo:\"https://images.unsplash.com/photo-1558898479-33c0057a5d12?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'05.02 PM'\r\n            },\r\n            {\r\n                message:\"hi Akansha\",\r\n                sender:'self',\r\n                timestamps:'05.02 PM'\r\n            },\r\n            {\r\n                message:\"r u in bilaspur ??\",\r\n                sender:'user',\r\n                timestamps:'05.03 PM'\r\n            },\r\n            {\r\n                message:\"yeah and you ??\",\r\n                sender:'self',\r\n                timestamps:'05.05 PM'\r\n            },\r\n            {\r\n                message:\"m in bhilai ??\",\r\n                sender:'user',\r\n                timestamps:'05.07 PM'\r\n            },\r\n            {\r\n                message:\"ok i will be there next week for college work let's meet that day !! \",\r\n                sender:'self',\r\n                timestamps:'05.10 PM'\r\n            },\r\n            {\r\n                message:\"done !!!\",\r\n                sender:'user',\r\n                timestamps:'05.11 PM'\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Avinash\",\r\n        id:5,\r\n        status:'online',\r\n        photo:\"https://images.unsplash.com/photo-1544725176-7c40e5a71c5e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1467&q=80\",\r\n        chats:[]\r\n    },\r\n    {\r\n        userName:\"Ananya\",\r\n        id:6,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1569913486515-b74bf7751574?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=389&q=80\",\r\n        chats:[]\r\n    },\r\n    {\r\n        userName:\"Vinod\",\r\n        id:7,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1543610892-0b1f7e6d8ac1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"i will be unable to Attend today's class Abhishek so don't wait for me\",\r\n                sender:'user',\r\n                timestamps:\"08.00 AM\"\r\n            },\r\n            {\r\n                message:\"Ok will meet you after coaching and give you the notes of today's class.\",\r\n                sender:'self',\r\n                timestamps:\"08.05 AM\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userName:\"Kirti\",\r\n        id:8,\r\n        status:'online',\r\n        photo:\"https://images.unsplash.com/photo-1558439749-b53250f4ffb6?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=327&q=80\",\r\n        chats:[]\r\n    },\r\n    {\r\n        userName:\"Ritesh\",\r\n        id:9,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1623582854588-d60de57fa33f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=870&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Ritesh\",\r\n                sender:'self',\r\n                timestamps:'01.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'01.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'01.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'01.05 PM'\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Vishnupriya\",\r\n        id:10,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1607746882042-944635dfe10e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=870&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Vishnupriya\",\r\n                sender:'self',\r\n                timestamps:'01.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'01.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'01.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'01.05 PM'\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Rajat\",\r\n        id:11,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1626038135427-bd4eb8193ba5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Rajat\",\r\n                sender:'self',\r\n                timestamps:'01.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'01.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'01.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'01.05 PM'\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Manik\",\r\n        id:12,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1599566147214-ce487862ea4f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=347&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Manik\",\r\n                sender:'self',\r\n                timestamps:'01.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'01.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'01.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'01.05 PM'\r\n            }\r\n        ]\r\n\r\n    },\r\n    {\r\n        userName:\"Nikita\",\r\n        id:13,\r\n        status:'offline',\r\n        photo:\"https://images.unsplash.com/photo-1568822617270-2c1579f8dfe2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=580&q=80\",\r\n        chats:[\r\n            {\r\n                message:\"hi Nikita\",\r\n                sender:'self',\r\n                timestamps:'01.00 PM'\r\n            },\r\n            {\r\n                message:\"hi Abhsihek\",\r\n                sender:'user',\r\n                timestamps:'01.02 PM'\r\n            },\r\n            {\r\n                message:\"how are you??\",\r\n                sender:'self',\r\n                timestamps:'01.03 PM'\r\n            },\r\n            {\r\n                message:\"m fine wat abt u ??\",\r\n                sender:'user',\r\n                timestamps:'01.05 PM'\r\n            }\r\n        ]\r\n\r\n    }\r\n]\r\n\r\nexport default contacts;","//action types\r\n\r\nexport const ADD_CONTACTS = \"ADD_CONTACTS\";\r\n\r\nexport const FILTER_CONTACTS= \"FILTER_CONTACTS\";\r\n\r\nexport const SEND_MESSAGE=\"SEND_MESSAGE\";","//importing action types\r\nimport { ADD_CONTACTS, FILTER_CONTACTS,SEND_MESSAGE } from \"./actionTypes\";\r\n\r\n//all the below functions returns the type of actions and required data to change store state on the basis of activity performed\r\n\r\nexport function addContacts(contacts){\r\n    return{\r\n        type:ADD_CONTACTS,\r\n        contacts\r\n    }\r\n}\r\n\r\nexport function filter(contacts){\r\n    return{\r\n        type:FILTER_CONTACTS,\r\n        contacts\r\n    }\r\n}\r\n\r\nexport function sendMessage(user,message,timestamps){\r\n    return{\r\n        type:SEND_MESSAGE,\r\n        user,\r\n        message,\r\n        timestamps\r\n    }\r\n}","import { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport contacts from '../utils/contacts';\r\nimport {addContacts} from '../action';\r\n\r\nfunction userCard(props){\r\n    //getting information from props\r\n    const{setValue,dispatch,user}=props;\r\n\r\n    //when you click on user card this function is triggered to dispatch an action and setting value of searchbar as empty\r\n    const handleClick=()=>{\r\n        dispatch(addContacts(contacts));      \r\n        if(setValue){\r\n            setValue(\"\");\r\n        }\r\n    }\r\n    const length=user.chats.length-1;\r\n    const link=`/user${user.id}`\r\n    \r\n    //using Link to guide to the user conversation \r\n    return(\r\n       <Link to={link} style={{ textDecoration: 'none' }} onClick={handleClick} >\r\n            <div className=\"flex w-100 h-60px userCard p3\">\r\n            <div className=\"w-20 p1\">\r\n                <div className=\"profile-picture\">\r\n                     <img src={user.photo} alt=\"pro\" /> \r\n                </div>\r\n            </div>\r\n            <div className=\"w-80 p\">\r\n                <div className=\"userdetails\" >\r\n                    <span className=\"username\"> {user.userName} </span>\r\n                    <span className=\"time\">{length!==-1 ? user.chats[length].timestamps : null }</span>\r\n                </div>   \r\n                <span className=\"message\">\r\n                    {length=== -1 ? null : \r\n                    user.chats[length].message.length<35 ? user.chats[length].message : user.chats[length].message.substring(0,35)+\" ...\"}\r\n                </span>                       \r\n            </div>\r\n            </div>\r\n       </Link>\r\n    )\r\n\r\n}\r\n\r\n//returns the required data from global state\r\nfunction mapStateToProps(state){\r\n    return{\r\n        ...state\r\n    }\r\n}\r\n\r\n//using connect to connect this component to global store\r\nconst connectedComponent=connect(mapStateToProps)(userCard);\r\n\r\n\r\nexport default connectedComponent;","import { connect } from 'react-redux';\r\nimport React, { useState,useEffect } from 'react';\r\n\r\nimport UserCard from './UserCard';\r\nimport Contacts from '../utils/contacts';\r\nimport {filter} from '../action';\r\n\r\n function LeftView(props){\r\n     //creating local state from react hook useState\r\n    const [searchbar , setValue]=useState(\"\");\r\n\r\n    //getting informations from props\r\n    const {dispatch,setConvo,contacts}=props;\r\n\r\n    //function for handling change on searchbar\r\n    const handleChange=  (e) =>{\r\n        const newValue=e.target.value\r\n        setValue(newValue);\r\n    }\r\n\r\n    //using react hook useEffect for dispatching an action of filtering contacts on the basis of text present in seaarchbar\r\n    useEffect(()=>{\r\n        const filteredContacts= Contacts.filter((contact)=>{\r\n                return contact.userName\r\n                .toLowerCase()\r\n                .includes(searchbar.toLowerCase());\r\n            })\r\n        dispatch(filter(filteredContacts));\r\n    },[searchbar,dispatch]);\r\n\r\n    //changing value of showConvo wich we have recived as props through setConvo.\r\n    const changeShowConvo = (e) =>{\r\n        setConvo(true);\r\n    }\r\n    \r\n    return(\r\n        <div className=\"leftsidebar\">\r\n            <div className=\"personalInfo\">\r\n                 <span  className=\"logInuser\"> <img src= {props.loggedInUser.img} alt=\"profile\"/></span>\r\n                <span className=\"logInuser\" >{props.loggedInUser.name}</span>\r\n                <span className=\"logInuser phone\" >{props.loggedInUser.phoneNo}</span>\r\n            </div>\r\n            <div className=\"searchbar\">\r\n                <input type=\"text\" placeholder=\"   Search.. \" name=\"search\" onChange={handleChange} value={searchbar}/>\r\n                <span  className=\"icon\" >\r\n                    <img src=\"https://cdn-icons-png.flaticon.com/512/751/751463.png\" alt=\"search\" />\r\n                </span>\r\n                <div className=\"add-convo\">\r\n                    <span className=\"text\">\r\n                         Create Conversation\r\n                    </span>\r\n                    <span className=\"add-img\">\r\n                        <img src= \"https://cdn-icons.flaticon.com/png/512/863/premium/863823.png?token=exp=1633960669~hmac=50fa37db1705b19d07a84546b7b68abc\" onClick={changeShowConvo} alt=\"add\"/>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* rendering usercard for the users present with required information */}\r\n            <div className=\"scroll\">\r\n                {contacts.length <9 ? contacts.map((user=>{\r\n                    return <UserCard user={user} key={ user.id} setValue={setValue} />\r\n                })):\r\n                contacts.map((user)=>(\r\n                    user.chats.length >0 ? <UserCard user={user} key={user.id} setValue={setValue} /> : null   \r\n                ))}\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n//returns the required data from global state\r\nfunction mapStatetoprops(state){\r\n    return{\r\n        contacts:state.contacts,\r\n        loggedInUser:state.loggedInUser\r\n    }\r\n\r\n}\r\n\r\n//using connect to connect this component to global store\r\nconst connectedComponent=connect(mapStatetoprops)(LeftView);\r\n\r\nexport default connectedComponent;","import UserCard from './UserCard';\r\nimport contacts from '../utils/contacts';\r\n\r\nfunction createConvo(props){\r\n\r\n     //getting information from props\r\n    const {setConvo}=props;\r\n\r\n    //function triggered when you click on close icon of all contacts pop up\r\n    const handleClose= () =>{\r\n        setConvo(false);\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"showContacts\">\r\n                <div className=\"allheader\">\r\n                    <span className=\"showheader\">Contacts</span>\r\n                    <span className=\"closeimg\"><img src=\"https://cdn-icons-png.flaticon.com/512/753/753345.png\" alt=\"close\" onClick={handleClose}/></span>\r\n                </div>\r\n                {/* rendering usercard for all the contacts  */}\r\n                <div className=\"allconctacs\" onClick={handleClose}>\r\n                        {contacts.map((user)=>{\r\n                            return <UserCard user={user} key={ user.id} />\r\n                        })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default createConvo;","import { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nimport CreateConvo from './CreateConvo'\r\nimport { sendMessage } from '../action';\r\n\r\nfunction RightView(props){\r\n    //getting information from props\r\n    const { showConvo,setConvo,user,loggedInUser,dispatch}=props;\r\n\r\n    //creating local state message from react hook useState\r\n    const [message,setMessage] = useState(\"\");\r\n    \r\n    //when text for message changes , this function is saves the text in local state by using setMessage\r\n    const handleChange=(e)=>{\r\n      setMessage(e.target.value);\r\n    }\r\n\r\n    //this function is responsible for getting time in 12 hr format\r\n    function formatAMPM(date) {\r\n      var hours = date.getHours();\r\n      var minutes = date.getMinutes();\r\n      var ampm = hours >= 12 ? 'PM' : 'AM';\r\n      hours = hours % 12;\r\n      hours = hours ? hours : 12; // the hour '0' should be '12'\r\n      minutes = minutes < 10 ? '0'+minutes : minutes;\r\n      var strTime = hours + ':' + minutes + ' ' + ampm;\r\n      return strTime;\r\n    }\r\n\r\n    //function called when we click on  send message \r\n    const handleSubmit=()=>{\r\n      //getting time\r\n      const timestamps=formatAMPM(new Date());\r\n\r\n      //dispatching action to save the message in global store\r\n      dispatch(sendMessage(user,message,timestamps));\r\n\r\n      //setting message value as empty again\r\n      setMessage(\"\");\r\n    }\r\n    return(\r\n      <div className=\"rightSide\">\r\n           {user.id===0 ? \r\n           <div className=\"user0\">\r\n             {/* createConvo is the all contacts pop up which you after clicking on create conversation icon */}\r\n              <div>\r\n                { showConvo && <CreateConvo setConvo={setConvo} /> }\r\n              </div>\r\n           </div>: \r\n           <div className=\"otherUsers\">\r\n              <div>\r\n                <div className=\"chat_header\">\r\n                    <span  className=\"current_user\"> <img src= {user.photo} alt=\"profile\"/></span>\r\n                    <span className=\"current_user\" >{user.userName}</span>\r\n                </div>\r\n                <div className=\"complete_convo\">\r\n                     {user.chats.length===0 ? null :\r\n                      <div className=\"messages\">\r\n                          {user.chats.map((chat,index)=>{\r\n                            return( \r\n                            <div className=\"tip\" key={index}>\r\n                              {chat.sender=== \"self\" ?\r\n                                <div className=\"chatbox\">\r\n                                  <div className=\"flex b1\">     \r\n                                    <div className=\"mes\" ><p>{chat.message}</p></div>                              \r\n                                    <div className=\"time\"><p>{chat.timestamps}</p></div>                                   \r\n                                  </div>\r\n                                  <span className=\"current_user fd\"><img src={loggedInUser.img} alt=\"my pic\"/></span>\r\n                                </div>\r\n                              :\r\n                                <div>\r\n                                  <div className=\"chatboxx\">\r\n                                  <span className=\"current_user fd\"><img src={user.photo} alt=\"user pic\"/></span>\r\n                                    <div className=\"flex b2\">     \r\n                                      <div className=\"mes\" ><p>{chat.message}</p></div>                              \r\n                                      <div className=\"time\"><p>{chat.timestamps}</p></div>                                   \r\n                                    </div>\r\n                                    \r\n                                  </div>\r\n                                </div>                             \r\n                              }\r\n                                \r\n                            </div>\r\n                            )\r\n                          })}\r\n                      </div>\r\n                      }\r\n                </div>\r\n              </div>\r\n               {/* createConvo is the all contacts pop up which you after clicking on create conversation icon */}\r\n              <div>\r\n                { showConvo && <CreateConvo setConvo={setConvo} /> }\r\n              </div>\r\n              <div className=\"sendbox\">\r\n                    <div className=\"flex\">\r\n                      <div className=\"ipbox\"><input placeholder=\"type message ... \" onChange={handleChange} value={message}/></div>\r\n                      <div className=\"sendimg\"><img src=\"https://cdn-icons.flaticon.com/png/512/4980/premium/4980385.png?token=exp=1634209433~hmac=4173e5ab944b3654536511f3c6c67066\" alt=\"send\" onClick={handleSubmit}/></div>\r\n                    </div>\r\n              </div>\r\n            </div>}           \r\n      </div>\r\n    )\r\n}\r\n\r\n//returns the required data from global state\r\nfunction mapStatetoprops(state){\r\n  return{\r\n    loggedInUser:state.loggedInUser\r\n  }\r\n}\r\n\r\n//using connect to connect this component to global store\r\nconst connectedComponent=connect(mapStatetoprops)(RightView);\r\n\r\nexport default connectedComponent;","import { connect } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport '../stylesheets/App.css';\nimport contacts from '../utils/contacts';\nimport {addContacts} from '../action';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nimport LeftView from './LeftView';\nimport RightView from './RightView';\n\nfunction App(props) {\n  \n  //creating local state showConvo  with react hook useState , showConvo is responsible for showing all the contacts when clicked on Create conversation icon  \n  const [showConvo,setConvo] = useState(false);\n\n  //getting data from global store\n  const {dispatch,user}=props;\n\n  //getting all the users from dummy data\n  const user1=contacts[0];\n  const user2=contacts[1];\n  const user3=contacts[2];\n  const user4=contacts[3];\n  const user5=contacts[4];\n  const user6=contacts[5];\n  const user7=contacts[6];\n  const user8=contacts[7];\n  const user9=contacts[8];\n  const user10=contacts[9];\n  const user11=contacts[10];\n  const user12=contacts[11];\n  const user13=contacts[12];\n\n //dispatching action to add all contacts to the global store\n  useEffect(()=>{\n    dispatch(addContacts(contacts));\n  },[dispatch])\n  \n  return (\n    //rendering right view and left view with required informations\n    <div className=\"flex\">\n        <div className=\"w-30\">\n          <LeftView showConvo={showConvo} setConvo={setConvo}/>\n        </div>\n        <div className=\"w-70\">\n    {/* using switch and Route for routing pupose */}\n          <Switch>\n            <Route \n              path='/'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user1'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user1}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user2'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user2}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user3'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user3}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user4'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user4}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user5'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user5}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user6'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user6}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user7'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user7}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user8'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user8}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user9'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user9}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user10'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user10}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user11'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user11}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user12'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user12}\n                  />\n                );\n              }}            \n            />\n            <Route \n              path='/user13'\n              exact\n              render={(props)=>{\n                return(\n                  <RightView\n                  {...props}\n                  showConvo={showConvo} \n                  setConvo={setConvo} \n                  user={user13}\n                  />\n                );\n              }}            \n            />\n          </Switch>\n        </div>  \n    </div>\n  );\n}\n\n//returns the required data from global state\nfunction mapStatetoprops(state){\n  return{\n    contacts:state.contacts,\n    user:state.loggedInUser\n  }\n}\n\n//using connect to connect this component to global store\nconst connectedComponent=connect(mapStatetoprops)(App);\n\nexport default connectedComponent;\n","//importing action types\r\nimport { ADD_CONTACTS,FILTER_CONTACTS,SEND_MESSAGE} from \"../action/actionTypes\";\r\n\r\n//giving initial state to the store\r\nconst initialState={\r\n    contacts:[],\r\n    loggedInUser:{\r\n        name:'Abhishek Verma',\r\n        id:0,\r\n        img:\"https://images.unsplash.com/photo-1563584316028-2b70b3a3a8bf?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=387&q=80\",\r\n        phoneNo:\"7000482884\"\r\n    }\r\n}\r\n\r\n//changing store state on the basis of action type\r\nexport default function rootReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case ADD_CONTACTS:{\r\n            return{\r\n                ...state,\r\n                contacts:action.contacts\r\n            }\r\n        }\r\n        case FILTER_CONTACTS:{\r\n            return{\r\n                ...state,\r\n                contacts:action.contacts\r\n            }\r\n        }\r\n        case SEND_MESSAGE:{\r\n            const newObj={\r\n                message:action.message,\r\n                sender:\"self\",\r\n                timestamps:action.timestamps\r\n            }\r\n            const cont=state.contacts.map(contact => ({...contact}));\r\n            console.log(\".lk[kpoom\",cont[action.user.id-1]);\r\n            cont[action.user.id-1].chats.push(newObj);\r\n            return{\r\n                ...state,\r\n                contacts:cont\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport { HashRouter } from 'react-router-dom';\n\n\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport rootReducer from './reducer';\n\n//creating global store with createStore\nconst store=createStore(rootReducer,applyMiddleware(thunk,logger));\n\n//Rrndering App Component\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store} >\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}